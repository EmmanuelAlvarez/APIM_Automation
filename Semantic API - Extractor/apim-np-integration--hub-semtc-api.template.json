{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "serviceUrl": {
      "type": "object"
    }
  },
  "resources": [
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Hub Semtc",
        "serviceUrl": "[parameters('serviceUrl').hubsemtc]",
        "path": "hub-semtc",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "value": "{\"ChatBotRequestModel\":{\"description\":\"ChatBot Request Model\",\"type\":\"object\",\"properties\":{\"source\":{\"description\":\"The source to retrieve content.\",\"enum\":[\"All\",\"Blogs\",\"Courses\",\"Datasets\",\"DevelopmentIndicators\",\"LibGuides\",\"OperationDocuments\",\"Publications\"],\"type\":\"string\"},\"text\":{\"description\":\"The text to generate the recommendations.\",\"type\":\"string\"},\"limit\":{\"format\":\"int32\",\"description\":\"Number of results to return.\",\"type\":\"integer\"},\"offset\":{\"format\":\"int32\",\"description\":\"Number of results to skip.\",\"type\":\"integer\"}}},\"FeedbackDetailsModel\":{\"description\":\"Feedback Details Model\",\"type\":\"object\",\"properties\":{\"uri\":{\"description\":\"Gets or sets the URI.\",\"type\":\"string\"},\"type\":{\"description\":\"The type of feedback.\",\"type\":\"string\"},\"message\":{\"description\":\"The feedback message.\",\"type\":\"string\"},\"dateCreated\":{\"format\":\"date-time\",\"description\":\"The date the feedback was created.\",\"type\":\"string\"},\"recommendations\":{\"description\":\"The list of recommendations.\",\"uniqueItems\":false,\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/SimilarityModelResultTripleModel\"}},\"user\":{\"$ref\":\"#/definitions/UserDataModel\",\"description\":\"The user that gave feedback.\"},\"sentiment\":{\"description\":\"The sentiment value of the feedback.\",\"type\":\"boolean\"}}},\"SimilarityModelResultTripleModel\":{\"description\":\"Similarity model result triple model is used to deserialize results that come back from the similarity model.\",\"type\":\"object\",\"properties\":{\"name\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the name.\"},\"url\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the Url.\"},\"description\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the Uri.\"},\"documentType\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the document type. \\r\\nFor example operation documents this value could be \\\"Loan Proposal\\\"\"},\"imagePath\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the date created.\"},\"date\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the date modified.\"},\"confidence\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the match confidence.\"},\"datasource\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the data source.\"},\"datasourceType\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the data source type. \\r\\nFor example courses this value could be \\\"ONLINE TUTOR\\\", \\\"SELF-PACED\\\", \\\"MOOC\\\", \\\"FACE TO FACE\\\"\"},\"relatedUrl\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the related url. \\r\\nFor example libguides this value is the link to the infoguide\"},\"relatedLinkPreText\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the related link pre text. \\r\\nThis text appears before a related url link.\"},\"relatedLinkText\":{\"$ref\":\"#/definitions/RdfTripleObjectModel\",\"description\":\"Gets or sets the related link text. \\r\\nThis is used as the text for the related url.\"},\"recommendedUrl\":{\"description\":\"Gets the recommended URL which is used to store the original value of the recommendation without any redirect information.\",\"type\":\"string\"}}},\"UserDataModel\":{\"description\":\"User Data Model\",\"type\":\"object\",\"properties\":{\"id\":{\"description\":\"The id of the user.\",\"type\":\"string\"},\"email\":{\"description\":\"The email of the user.\",\"type\":\"string\"},\"name\":{\"description\":\"The name of the user.\",\"type\":\"string\"},\"displayName\":{\"description\":\"The display name of the user.\",\"type\":\"string\"}}},\"RdfTripleObjectModel\":{\"description\":\"Rdf triple predicate object model is used to store the type and value of an rdf triple.\",\"type\":\"object\",\"properties\":{\"xml:lang\":{\"description\":\"Gets or sets the XML language.\",\"type\":\"string\"},\"type\":{\"description\":\"Gets or sets the type.\",\"type\":\"string\"},\"value\":{\"description\":\"Gets or sets the value.\",\"type\":\"string\"}}},\"ManualContentChildSubmissionModel\":{\"description\":\"Manual content child submission model is used when storing/retrieving content that was manually submitted\\r\\nto the knowledge graph.\",\"type\":\"object\",\"properties\":{\"uri\":{\"type\":\"string\"},\"parentDocument\":{\"$ref\":\"#/definitions/FindabilityDocumentModel\",\"description\":\"Gets or sets the parent document model.\"},\"recommendationTitle\":{\"description\":\"Gets or sets the recommendation title.\",\"type\":\"string\"},\"recommendationUrl\":{\"description\":\"Gets or sets the recommendation URL.\",\"type\":\"string\"},\"contentLanguage\":{\"description\":\"Gets or sets the content language.\",\"type\":\"string\"},\"recommendationDescription\":{\"description\":\"Gets or sets the recommendation description.\",\"type\":\"string\"},\"tags\":{\"description\":\"Gets or sets the suggested tags.\",\"uniqueItems\":false,\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/TagSuggestionModel\"}},\"dateCreated\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date created.\",\"type\":\"string\"},\"dateModified\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date modified.\",\"type\":\"string\"},\"datePublished\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date Published.\",\"type\":\"string\"}}},\"FindabilityDocumentModel\":{\"description\":\"Findability document model is used to contain the document that comes back Stardog.\",\"type\":\"object\",\"properties\":{\"documentName\":{\"description\":\"Gets or sets the name of the document.\",\"type\":\"string\"},\"documentUrl\":{\"description\":\"Gets or sets the document URL.\",\"type\":\"string\"},\"documentUri\":{\"description\":\"Gets or sets the document URI.\",\"type\":\"string\"}}},\"TagSuggestionModel\":{\"description\":\"Tag suggestion model is needed so that tags can be associated with content.\",\"type\":\"object\",\"properties\":{\"key\":{\"description\":\"Gets or sets the key which is the uri for this tag in poolparty\",\"type\":\"string\"},\"name\":{\"description\":\"Gets or sets the name.\",\"type\":\"string\"},\"uuid\":{\"description\":\"Gets or sets the UUID.\",\"type\":\"string\"},\"relatedSchema\":{\"description\":\"Gets or sets the related schema which denotes what taxonomy schema this item is related to.\\r\\ni.e IdBAuthors\",\"type\":\"string\"},\"score\":{\"description\":\"Gets or sets the score.\",\"type\":\"string\"}}},\"ManualContentParentSubmissionModel\":{\"description\":\"Manual content parent submission model is used when storing/retrieving content that was manually submitted\\r\\nto the knowledge graph.\",\"type\":\"object\",\"properties\":{\"uri\":{\"type\":\"string\"},\"documentName\":{\"description\":\"Gets or sets the document name.\",\"type\":\"string\"},\"documentUrl\":{\"description\":\"Gets or sets the document URL.\",\"type\":\"string\"},\"documentType\":{\"description\":\"Gets or sets the type for this parent document.\",\"enum\":[\"Unknown\",\"SectorFramework\",\"CountryStrategy\"],\"type\":\"string\"},\"tags\":{\"description\":\"Gets or sets the suggested tags.\",\"uniqueItems\":false,\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/TagSuggestionModel\"}},\"dateCreated\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date created.\",\"type\":\"string\"},\"dateModified\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date modified.\",\"type\":\"string\"},\"datePublished\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date published.\",\"type\":\"string\"}}},\"RecommendationUserPreferencesModel\":{\"description\":\"Recommendation user preferences model is used to store preferences that users set\\r\\nfor the recommendations they'd like to receive.\",\"type\":\"object\",\"properties\":{\"uri\":{\"description\":\"Gets or sets the URI.\",\"type\":\"string\"},\"daysToDelayMeetingRecommendations\":{\"format\":\"int32\",\"description\":\"Gets or sets the days to delay meeting recommendations.\",\"type\":\"integer\"},\"isOptIntoSubscriptions\":{\"description\":\"Gets or sets a value indicating whether this instance is opt into subscriptions.\",\"type\":\"boolean\"},\"subscriptionFrequency\":{\"description\":\"Gets or sets the subscription frequency.\",\"enum\":[\"Unknown\",\"Daily\",\"Weekly\",\"Biweekly\",\"Monthly\",\"Quarterly\"],\"type\":\"string\"},\"userEmailAddress\":{\"description\":\"Gets or sets the user email address.\",\"type\":\"string\"},\"userDisplayName\":{\"description\":\"Gets or sets the display name of the user.\",\"type\":\"string\"},\"languagePreferences\":{\"description\":\"Gets or sets the language preferences.\",\"uniqueItems\":false,\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"topicsOfInterestLanguageCode\":{\"description\":\"Gets or sets the topics of interest language code which is used to determine what language to get\\r\\nfor the topics of interest tags.\",\"type\":\"string\"},\"topicsOfInterest\":{\"description\":\"Gets or sets the topics of interest.\",\"uniqueItems\":false,\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/TagSuggestionModel\"}},\"dateCreated\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date created.\",\"type\":\"string\"},\"dateModified\":{\"format\":\"date-time\",\"description\":\"Gets or sets the date modified.\",\"type\":\"string\"}}},\"RelatedContentRequestModel\":{\"description\":\"Related Widget Request Model is used in order for the client to specify the parameters necessary to get a related widget in the form of HTML.\",\"type\":\"object\",\"properties\":{\"widgetDisplayType\":{\"description\":\"The display type (list, carousel) that should be generated.\",\"enum\":[\"Unknown\",\"List\",\"Carousel\"],\"type\":\"string\"},\"title\":{\"description\":\"The title parameter will be auto-tagged in pool party and those tags will be used to find related content.\",\"type\":\"string\"},\"keywords\":{\"description\":\"The keywords will be tagged as topics. For multiple keywords enter in a comma as a delimiter.\",\"type\":\"string\"},\"countries\":{\"description\":\"The countries will be tagged as countries. For multiple countries enter in a comma as a delimiter.\",\"type\":\"string\"},\"orgUnits\":{\"description\":\"The org units will be tagged as org units. For multiple org units enter in a comma as a delimiter.\",\"type\":\"string\"},\"sectors\":{\"description\":\"The sectors units will be tagged as sectors. For multiple sectors enter in a comma as a delimiter.\",\"type\":\"string\"},\"numberOfResults\":{\"format\":\"int32\",\"description\":\"The number of results is used to limit the max number of related items.\",\"type\":\"integer\"},\"isViewedExternally\":{\"description\":\"Value indicating whether the widget will be viewed externally.\\r\\nWill be true by default.\",\"type\":\"boolean\"},\"shouldCaptureAnalytics\":{\"description\":\"If false or not set, urls will not be modified and analytics will not be captured.\",\"type\":\"boolean\"},\"shouldIncludeCssRef\":{\"description\":\"If false or not set then this css reference will be omitted.\",\"type\":\"boolean\"},\"widgetTitleLanguage\":{\"description\":\"Specifies the requested language for the title to be displayed in.\",\"type\":\"string\"},\"source\":{\"description\":\"Source of the content to be blacklisted\",\"type\":\"string\"},\"id\":{\"description\":\"Source of the content to be blacklisted blacklisted\",\"type\":\"string\"}}},\"Text\":{\"type\":\"string\"},\"Url\":{\"type\":\"string\"}}"
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/5ee8295387e73212f02205f9')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Action used to capture analytics when a user clicks either a link or thumbs up or thumbs down.",
        "request": {
          "queryParameters": [
            {
              "name": "Uri",
              "description": "Gets or sets the URI.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "RedirectToUrl",
              "description": "Gets or sets the redirect to url.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "DateClicked",
              "description": "Format - date-time (as date-time in RFC3339). Gets or sets the date clicked.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "UserEmailAddress",
              "description": "Gets or sets the user email address.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "RecommendationName",
              "description": "Gets or sets the name of the recommendation.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "WasLiked",
              "description": "Gets or sets the was like.",
              "type": "boolean",
              "required": false,
              "values": []
            },
            {
              "name": "RecommendationType",
              "description": "Gets or sets the type of the recommendation.",
              "type": "string",
              "required": false,
              "values": [
                "Unknown",
                "Subscription",
                "CalendarEvent",
                "Widget",
                "Alert",
                "SubscriptionSample",
                "Chatbot"
              ]
            },
            {
              "name": "AssetBaseUrl",
              "description": "Gets or sets the asset base URL.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Action used to capture analytics when a user clicks either a link or thumbs up or thumbs down.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/findability/analytics"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilityAnalyticsGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Findability"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilityAnalyticsGet/Findability')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionFindabilityAnalyticsGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Action used to retrieve content by an input tag.",
        "request": {
          "queryParameters": [
            {
              "name": "Tag",
              "description": "Concept that content should be tagged with.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Page",
              "description": "Format - int32. Page of the results to be returned.",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "Limit",
              "description": "Format - int32. Number of results to return per page (up to 500).",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "Id",
              "description": "Filter the results by the id (uri) of the content.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "MinimumScore",
              "description": "Filter the results by a minimum score.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Name",
              "description": "Filter the results by name.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Source",
              "description": "Source of the content to retrieve.",
              "type": "string",
              "required": false,
              "values": [
                "All",
                "Blogs",
                "Courses",
                "Datasets",
                "DevelopmentIndicators",
                "LibGuides",
                "OperationDocuments",
                "Publications"
              ]
            },
            {
              "name": "Url",
              "description": "Filter the results by the content url.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Action used to retrieve content by an input tag.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/findability/tagged"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilityTaggedGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Findability"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilityTaggedGet/Findability')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionFindabilityTaggedGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Action used to retrieve content by source from the findability graph.",
        "request": {
          "queryParameters": [
            {
              "name": "Source",
              "description": "Source of the content to retrieve.",
              "type": "string",
              "required": false,
              "values": [
                "All",
                "Blogs",
                "Courses",
                "Datasets",
                "DevelopmentIndicators",
                "LibGuides",
                "OperationDocuments",
                "Publications"
              ]
            },
            {
              "name": "Page",
              "description": "Format - int32. Page of the results to be returned.",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "Limit",
              "description": "Format - int32. Number of results to return per page (up to 500).",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "IncludeFullText",
              "description": "Value indicating whether to retrieve the full text of the content that was extracted by PoolParty.",
              "type": "boolean",
              "required": false,
              "values": []
            },
            {
              "name": "IncludeIndicatorData",
              "description": "Value indicating whether to retrieve the individual data points of an indicator.",
              "type": "boolean",
              "required": false,
              "values": []
            },
            {
              "name": "StartDate",
              "description": "Format - date-time (as date-time in RFC3339). Retrieve content that has been modified (or published when modified is not available) after the provided date.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "EndDate",
              "description": "Format - date-time (as date-time in RFC3339). Retrieve content that has been modified (or published when modified is not available) before the provided date.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "AlternateName",
              "description": "Filter the results by the alternate name.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "AssetType",
              "description": "Filter the results by the asset type.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Code",
              "description": "Filter the results by the indicator code.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Id",
              "description": "Filter the results by the id (uri) of the content.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "IdbOperation",
              "description": "Filter the results by the IDB operation.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Identifier",
              "description": "Filter the results by the identifier.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "InLanguage",
              "description": "Filter the results by the inLanguage value.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "ItemId",
              "description": "Filter the results by the publication itemId value.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Name",
              "description": "Filter the results by name.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "PublicationCode",
              "description": "Filter the results by the publication code.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "SourceInstitution",
              "description": "Filter the results by the development indicator source institution.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "StageCode",
              "description": "Filter the results by the operation document stage code.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "StageDescription",
              "description": "Filter the results by the operation document stage description.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Type",
              "description": "Filter the results by the type of content.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Url",
              "description": "Filter the results by the content url.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Action used to retrieve content by source from the findability graph.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/findability/content"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilityContentGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Findability"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilityContentGet/Findability')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionFindabilityContentGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Deletes the supplied submitted child item",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Content could not be found.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Deletes the supplied submitted child item",
        "method": "DELETE",
        "urlTemplate": "/api/v{version}/manualContent/child/delete"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildDeleteDelete')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentChild"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildDeleteDelete/ManualContentChild')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentChildDeleteDelete')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "project",
            "description": "The project id to retrieve.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get the concept schemes for the specified project.",
        "request": {
          "queryParameters": [
            {
              "name": "language",
              "description": "The language to return the labels in.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Get the concept schemes for the specified project.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/taxonomy/conceptSchemes?project={project}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomyConceptSchemesGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Taxonomy"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomyConceptSchemesGet/Taxonomy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionTaxonomyConceptSchemesGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "project",
            "description": "The project id to retrieve.",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "root",
            "description": "The uri of the concept or concept scheme to retrieve the subtree.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get the concept subtree from the PoolParty server for the given project and concept root.",
        "request": {
          "queryParameters": [
            {
              "name": "language",
              "description": "The language to return the concepts in.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Get the concept subtree from the PoolParty server for the given project and concept root.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/taxonomy/subtree?project={project}&root={root}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomySubtreeGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Taxonomy"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomySubtreeGet/Taxonomy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionTaxonomySubtreeGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "project",
            "description": "The project id to retrieve.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get the index builder (extraction model) status for the input project.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Get the index builder (extraction model) status for the input project.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/taxonomy/indexbuilder?project={project}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomyIndexbuilderGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Taxonomy"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomyIndexbuilderGet/Taxonomy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionTaxonomyIndexbuilderGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Get the projects available on the PoolParty server.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Get the projects available on the PoolParty server.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/taxonomy/projects"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomyProjectsGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Taxonomy"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionTaxonomyProjectsGet/Taxonomy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionTaxonomyProjectsGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets a list of all IDB posts.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Indicates that the process of getting blogs was successful.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets a list of all IDB posts.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/blogs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionBlogsGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Blogs"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionBlogsGet/Blogs')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionBlogsGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets a recommendation by text",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "FeedbackDetailsModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "FeedbackDetailsModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "FeedbackDetailsModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "FeedbackDetailsModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets a recommendation by text",
        "method": "POST",
        "urlTemplate": "/api/v{version}/chatbot/feedback"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionChatbotFeedbackPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ChatBot"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionChatbotFeedbackPost/ChatBot')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionChatbotFeedbackPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets a recommendation by text",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets a recommendation by text",
        "method": "POST",
        "urlTemplate": "/api/v{version}/chatbot/getRecommendationCountByText"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionChatbotGetRecommendationCountByTextPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ChatBot"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionChatbotGetRecommendationCountByTextPost/ChatBot')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionChatbotGetRecommendationCountByTextPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets a recommendation by text",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ChatBotRequestModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets a recommendation by text",
        "method": "POST",
        "urlTemplate": "/api/v{version}/chatbot/getRecommendationsByText"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionChatbotGetRecommendationsByTextPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ChatBot"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionChatbotGetRecommendationsByTextPost/ChatBot')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionChatbotGetRecommendationsByTextPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets a specific piece of manually submitted content retrieved by the recommendation url",
        "request": {
          "description": "The manual content submission.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "The url passed in doesn't belong to any submitted content",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets a specific piece of manually submitted content retrieved by the recommendation url",
        "method": "DELETE",
        "urlTemplate": "/api/v{version}/manualContent/parent/delete"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentDeleteDelete')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentParent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentDeleteDelete/ManualContentParent')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentParentDeleteDelete')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets a specific piece of manually submitted content retrieved by the recommendation url",
        "request": {
          "queryParameters": [
            {
              "name": "url",
              "description": "The Url that was used when the content was submitted.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "The url passed in doesn't belong to any submitted content",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets a specific piece of manually submitted content retrieved by the recommendation url",
        "method": "GET",
        "urlTemplate": "/api/v{version}/manualContent/parent/url"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentUrlGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentParent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentUrlGet/ManualContentParent')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentParentUrlGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets a specific piece of manually submitted content retrieved by the recommendation url",
        "request": {
          "queryParameters": [
            {
              "name": "url",
              "description": "The Url that was used when the content was submitted.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "The url passed in doesn't belong to any submitted content",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets a specific piece of manually submitted content retrieved by the recommendation url",
        "method": "GET",
        "urlTemplate": "/api/v{version}/manualContent/child/url"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildUrlGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentChild"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildUrlGet/ManualContentChild')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentChildUrlGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets all manually submitted content items.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets all manually submitted content items.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/manualContent/parent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentParent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentGet/ManualContentParent')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentParentGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets all manually submitted content items.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets all manually submitted content items.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/manualContent/child"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentChild"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildGet/ManualContentChild')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentChildGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "<para>This version of the api is provided for situations where the text needs to be passed in through the Body of the call.</para>\r\n<para>This will be helpful if the text makes the url too long.</para>",
        "request": {
          "description": "The text of the document that needs to be tagged.",
          "queryParameters": [
            {
              "name": "language",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Text"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Text"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Text"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Text"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets concepts from text that gets passed in",
        "method": "POST",
        "urlTemplate": "/api/v{version}/extractedConcepts/text"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsTextPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ExtractedConcepts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsTextPost/ExtractedConcepts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionExtractedConceptsTextPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "text",
            "description": "The text of the document that needs to be tagged.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets concepts from the text that is passed in.",
        "request": {
          "queryParameters": [
            {
              "name": "language",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets concepts from the text that is passed in.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/extractedConcepts/text?text={text}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsTextGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "ExtractedConcepts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsTextGet/ExtractedConcepts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionExtractedConceptsTextGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "<para>This version of the api is provided for situations where the url needs to be passed in through the Body of the call.</para>\r\n<para>This will be helpful if the url makes the url too long.</para>",
        "request": {
          "description": "The url of the html or document that needs to be tagged.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Url"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Url"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Url"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "Url"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets concepts from the url that gets passed in",
        "method": "POST",
        "urlTemplate": "/api/v{version}/extractedConcepts/url"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsUrlPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ExtractedConcepts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsUrlPost/ExtractedConcepts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionExtractedConceptsUrlPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "url",
            "description": "The url of the html or document that needs to be tagged.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets concepts from the url that gets passed in",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets concepts from the url that gets passed in",
        "method": "GET",
        "urlTemplate": "/api/v{version}/extractedConcepts/url?url={url}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsUrlGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "ExtractedConcepts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionExtractedConceptsUrlGet/ExtractedConcepts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionExtractedConceptsUrlGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets the recommendations based on a users stored user preferences.",
        "request": {
          "queryParameters": [
            {
              "name": "emailAddress",
              "description": "The email address that is associated with the user preferences.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "There currently aren't any recommendations based on this users preferences.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets the recommendations based on a users stored user preferences.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/recommendationUserPreferences/recommendations"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesRecommendationsGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "RecommendationUserPreferences"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesRecommendationsGet/RecommendationUserPreferences')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionRecommendationUserPreferencesRecommendationsGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets the related widget.",
        "request": {
          "description": "The related widget request mode.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RelatedContentRequestModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RelatedContentRequestModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RelatedContentRequestModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RelatedContentRequestModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Related content will be returned in the form of HTML.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 204,
            "description": "There were no results based on the parameters passed in.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "All requests must have either a Title or a Keyword.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets the related widget.",
        "method": "POST",
        "urlTemplate": "/api/v{version}/widgets/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionWidgetsRelatedPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "Widgets"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionWidgetsRelatedPost/Widgets')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionWidgetsRelatedPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets the related widget.",
        "request": {
          "queryParameters": [
            {
              "name": "WidgetDisplayType",
              "description": "The display type (list, carousel) that should be generated.",
              "type": "string",
              "required": false,
              "values": [
                "Unknown",
                "List",
                "Carousel"
              ]
            },
            {
              "name": "Title",
              "description": "The title parameter will be auto-tagged in pool party and those tags will be used to find related content.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Keywords",
              "description": "The keywords will be tagged as topics. For multiple keywords enter in a comma as a delimiter.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Countries",
              "description": "The countries will be tagged as countries. For multiple countries enter in a comma as a delimiter.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "OrgUnits",
              "description": "The org units will be tagged as org units. For multiple org units enter in a comma as a delimiter.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Sectors",
              "description": "The sectors units will be tagged as sectors. For multiple sectors enter in a comma as a delimiter.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "NumberOfResults",
              "description": "Format - int32. The number of results is used to limit the max number of related items.",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "IsViewedExternally",
              "description": "Value indicating whether the widget will be viewed externally.\r\nWill be true by default.",
              "type": "boolean",
              "required": false,
              "values": []
            },
            {
              "name": "ShouldCaptureAnalytics",
              "description": "If false or not set, urls will not be modified and analytics will not be captured.",
              "type": "boolean",
              "required": false,
              "values": []
            },
            {
              "name": "ShouldIncludeCssRef",
              "description": "If false or not set then this css reference will be omitted.",
              "type": "boolean",
              "required": false,
              "values": []
            },
            {
              "name": "WidgetTitleLanguage",
              "description": "Specifies the requested language for the title to be displayed in.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "Source",
              "description": "Source of the content to be blacklisted",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "ID",
              "description": "Source of the content to be blacklisted blacklisted",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Related content will be returned in the form of HTML.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 204,
            "description": "There were no results based on the parameters passed in.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "All requests must have either a Title or a Keyword.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets the related widget.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/widgets/related"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionWidgetsRelatedGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Widgets"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionWidgetsRelatedGet/Widgets')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionWidgetsRelatedGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "FilterText",
            "description": "Gets or sets the filter text.",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "LanguageCode",
            "description": "Gets or sets the language code.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets the specified suggestions based on the filter text passed.",
        "request": {
          "queryParameters": [
            {
              "name": "SchemaTitlesToInclude",
              "description": "Gets or sets the schema title. A comma delimited list of schema titles to match against.",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "SchemaTitlesToExclude",
              "description": "Gets or sets the schema titles to exclude. A comma delimited list of schema titles to match against.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets the specified suggestions based on the filter text passed.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/suggestedConcepts?FilterText={FilterText}&LanguageCode={LanguageCode}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionSuggestedConceptsGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "SuggestedConcepts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionSuggestedConceptsGet/SuggestedConcepts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionSuggestedConceptsGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          },
          {
            "name": "schemaTitle",
            "description": "The schema title.",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets the suggestions by schema title.",
        "request": {
          "queryParameters": [
            {
              "name": "languageCode",
              "description": "The language code.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets the suggestions by schema title.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/suggestedConcepts/schemaTitle?schemaTitle={schemaTitle}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionSuggestedConceptsSchemaTitleGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "SuggestedConcepts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionSuggestedConceptsSchemaTitleGet/SuggestedConcepts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionSuggestedConceptsSchemaTitleGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Gets the users recommendation preferences by email address.",
        "request": {
          "queryParameters": [
            {
              "name": "emailAddress",
              "description": "The email address.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "The emails address passed in doesn't belong to any recommendation user preferences.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Gets the users recommendation preferences by email address.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/recommendationUserPreferences"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "RecommendationUserPreferences"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesGet/RecommendationUserPreferences')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionRecommendationUserPreferencesGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Queries the specified query request model.",
        "request": {
          "queryParameters": [
            {
              "name": "DocumentName",
              "description": "Gets or sets the document name.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Not Found",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Queries the specified query request model.",
        "method": "GET",
        "urlTemplate": "/api/v{version}/manualContent/parent/query"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentQueryGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentParent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentQueryGet/ManualContentParent')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentParentQueryGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Returns structured data based on the url passed in",
        "request": {
          "queryParameters": [
            {
              "name": "url",
              "description": "The url belonging to the page where the structured data will be inserted into.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 404,
            "description": "Returned if there's no content that matches the url",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Returns structured data based on the url passed in",
        "method": "GET",
        "urlTemplate": "/api/v{version}/structuredData"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionStructuredDataGet')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "StructuredData"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionStructuredDataGet/StructuredData')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionStructuredDataGet')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Save the specified user preferences for the first time.",
        "request": {
          "description": "The recommendation user preferences.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "Returns the newly created item",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Save the specified user preferences for the first time.",
        "method": "POST",
        "urlTemplate": "/api/v{version}/recommendationUserPreferences"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "RecommendationUserPreferences"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesPost/RecommendationUserPreferences')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionRecommendationUserPreferencesPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Saves content that needs to get into the knowledge graph manually.",
        "request": {
          "description": "The manual content submission.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "Returns the newly created item",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Saves content that needs to get into the knowledge graph manually.",
        "method": "POST",
        "urlTemplate": "/api/v{version}/manualContent/parent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentParent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentPost/ManualContentParent')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentParentPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Saves content that needs to get into the knowledge graph manually.",
        "request": {
          "description": "The manual content submission.",
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 201,
            "description": "Returns the newly created item",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Saves content that needs to get into the knowledge graph manually.",
        "method": "POST",
        "urlTemplate": "/api/v{version}/manualContent/child"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentChild"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildPost/ManualContentChild')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentChildPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Sends an email to the admin team containing findability recommendation events that led to no recommendations.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Indicates that the process of sending emails will begin.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "Sending events is already in process.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Sends an email to the admin team containing findability recommendation events that led to no recommendations.",
        "method": "POST",
        "urlTemplate": "/api/v{version}/findability/sendRecommendationEvents"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilitySendRecommendationEventsPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Findability"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionFindabilitySendRecommendationEventsPost/Findability')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionFindabilitySendRecommendationEventsPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Sends out any alerts that need to be delivered.",
        "request": {
          "queryParameters": [
            {
              "name": "confidenceThreshold",
              "description": "Format - double. The confidence threshold.",
              "type": "number",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Indicates that the process of sending emails will begin.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 202,
            "description": "Indicates that the process of sending emails will is still going since the last call.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "Sending alerts are already being processed.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Sends out any alerts that need to be delivered.",
        "method": "POST",
        "urlTemplate": "/api/v{version}/alerts/send"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionAlertsSendPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Alerts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionAlertsSendPost/Alerts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionAlertsSendPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Sends out any subscription recommendations that need to be delivered.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Indicates that the process of sending emails will begin.",
            "headers": [],
            "representations": []
          },
          {
            "statusCode": 400,
            "description": "Sending subscriptions are already being processed.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Sends out any subscription recommendations that need to be delivered.",
        "method": "POST",
        "urlTemplate": "/api/v{version}/subscriptions/send"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionSubscriptionsSendPost')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Subscriptions"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionSubscriptionsSendPost/Subscriptions')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionSubscriptionsSendPost')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Updates manual content submission item.",
        "request": {
          "description": "The manual content submission.",
          "queryParameters": [
            {
              "name": "uri",
              "description": "The URI of the submitted content.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentParentSubmissionModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Updates manual content submission item.",
        "method": "PUT",
        "urlTemplate": "/api/v{version}/manualContent/parent/uri"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentUriPut')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentParent"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentParentUriPut/ManualContentParent')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentParentUriPut')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Updates manual content submission item.",
        "request": {
          "description": "The manual content submission.",
          "queryParameters": [
            {
              "name": "uri",
              "description": "The URI of the submitted content.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "ManualContentChildSubmissionModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Updates manual content submission item.",
        "method": "PUT",
        "urlTemplate": "/api/v{version}/manualContent/child/uri"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildUriPut')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "ManualContentChild"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionManualContentChildUriPut/ManualContentChild')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionManualContentChildUriPut')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "version",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "Updates users recommendation preferences.",
        "request": {
          "description": "The user preferences.",
          "queryParameters": [
            {
              "name": "uri",
              "description": "The URI belonging to the users recommendation preferences.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            },
            {
              "contentType": "application/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            },
            {
              "contentType": "text/json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "5ee8295387e73212f02205f9",
              "typeName": "RecommendationUserPreferencesModel"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Updates users recommendation preferences.",
        "method": "PUT",
        "urlTemplate": "/api/v{version}/recommendationUserPreferences/uri"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesUriPut')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hub-semtc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'hub-semtc', '5ee8295387e73212f02205f9')]"
      ]
    },
    {
      "properties": {
        "displayName": "RecommendationUserPreferences"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hub-semtc/ApiV-versionRecommendationUserPreferencesUriPut/RecommendationUserPreferences')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'hub-semtc', 'ApiV-versionRecommendationUserPreferencesUriPut')]"
      ]
    }
  ]
}